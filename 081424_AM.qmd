---
title: "eds221 day 3 practice"
author: "Eva Newby"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
pinyon_pine <- 14
lodgepole_pine <- 46

# some logical expressions
pinyon_pine ==10
pinyon_pine < lodgepole_pine 
pinyon_pine != 25 
```

#  Conditionals 
```{r}
burrito <- 2.4

# write a short if statement
if (burrito > 2) {
  print("I Love Burritos!")
}
```

```{r}
pika <- 89
if(pika >60) {print("mega pika")} else 
  print("normal pika")
```

# if else if else commands
```{r}
marmot <- 4.8
if(marmot < 0.5){print("a small marmot")} else if(marmot >=0.5 & marmot<3){print("a medium marmot")} else print("a large marmot")
  
``` 

```{r}
library(stringr)

my_ships <- c("Millenium Falcon",
              "X-wing",
              "Tie-Figher",
              "Death Star")
str_detect(my_ships, pattern = "r")
```

```{r}
phrase <- "I love burritos"
if(str_detect(phrase, "love")){print("burrito fan")}

```

# switch 
```{r}
species <- "mouse"
switch (species, cat = print("meow"), dog = print("bark"), mouse = print("squeak")
)
```

```{r}
species <- "mouse"
if(species =="cat"){print("meow")} else if(species=="dog"){print("bark")} else if (species =="mouse"){print("squeak")} else print("other")

```

$ For loop
```{r}
dog_names <- c("Teddy", "Khora", "Banjo", "Waffle")
for (pupster in dog_names){print(paste0("My dogs name is ", pupster, "."))}
```
 
```{r}
mass <- seq(from = 0, to = 3, by = 0.5)

mass_1 <- mass[1]

for (i in mass) {
  new_value <- i +2
print(new_value)
}
```
 
```{r}
mass <- seq(from = 0, to = 3, by = 0.5)

for (i in seq_along(mass)){
  new_value <- mass [i] + 2 
  print(new_value)}

```
 
```{r}
tree_height <- c(1,2,6,10)

for (i in seq_along(tree_height)){ 
  new_value <-tree_height[i] + tree_height[i + 1]
print(new_value)
}

```
 
# For loops with conditional statements
```{r}
animal <- c("cat", "dog", "dog", "zebra", "dog")

for (i in seq_along(animal)) {
  if (animal[i] == "dog"){
  print("I love dogs!")
} else
  print("this is not a dog")
}
```

# For a numerical type
```{r}
# Animal types:
rm(list =ls())
species <- c("dog", "elephant", "goat", "dog", "dog", "elephant")
age_human <- c(3,8,4,6,12,18)

#convert ages to "animal years" using the following:
# 1 human year = 7 in dog
# 1 human year = 0.88 in elephant 
# 1 human yeaar = 4.7 in goat


for (i in seq_along(species)) {
  if(species[i] == "dog"){
  animal_age <- age_human[i] * 7
} else if (species[i] == "elephant"){
  animal_age <- age_human[i] * 0.88
} else if (species[i] == "goat"){
  animal_age <- age_human[i] * 4.7
}
  print(animal_age)
}

```

# Storing the output from for loops
```{r}
#Create the empty ector animal_ages:
animal_ages <- vector(mode = "numeric", length = length(species))

# Vectors with species and human age:
species <- c("dog", "elephant", "goat", "dog", "dog", "elephant")

age_human <- c(3,8,4,6,12,18)

# Same loop as above, with additional peace added to populate our empty vector

for (i in seq_along(species)) {
  if(species[i] == "dog"){
  animal_age <- age_human[i] * 7
} else if (species[i] == "elephant"){
  animal_age <- age_human[i] * 0.88
} else if (species[i] == "goat"){
  animal_age <- age_human[i] * 4.7
}
  animal_ages[i] <- animal_age
}

animal_ages
```

# Another example
```{r}
tigers <- c(29,34,82)
lions <- c(2,18,6)

big_cats <- vector(mode = "numeric", length = length(tigers))

for (i in seq_along(tigers)) {
  total_cats <- tigers[i] + lions[i]
big_cats[i] <- total_cats
}

big_cats
```

# More practice
```{r}
mtcars[,2]
mtcars[2]
mtcars[[2]]
```

```{r}
mean_mtcars <- vector(mode = "numeric", length = ncol(mtcars))

for (i in 1:ncol(mtcars)){
 mean_value <- mean(mtcars[[i]], na.rm = TRUE)
mean_mtcars[i] <- mean_value 
}
mean_mtcars
```

# can skip over some columns, use conditional statements
```{r}
# install.packages("palmerpenguins")
# library(palmerpenguins)

for (i in seq_along(penguins)) {
  if (is.numeric(penguins[[i]])) {
  penguin_median <- median(penguins[[i]], na.rm = TRUE)
  print(penguin_median)
} else {
  print("non-numeric column")
}
}
```

# apply
```{r}
apply(X = mtcars, MARGIN = 2, FUN = mean)
```

```{r}
library(tidyverse
        )

penguins %>%
  group_by(species) %>%
  summarise(across(where(is.numeric), mean, na.rm = TRUE))


```

```{r}
library(purrr)

map(.x = mtcars, .f = mean)
map_df(.x = mtcars, .f = mean)
```

